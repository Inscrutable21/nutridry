// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  description      String
  longDescription  String?       // Detailed product description
  variants         SizeVariant[]
  image            String
  images           String[]      // Additional product images
  category         String
  rating           Float         @default(0)
  reviews          Int           @default(0)
  bestseller       Boolean       @default(false)
  featured         Boolean       @default(false)
  benefits         String[]      // Product benefits
  features         String[]      // Product features
  usageSuggestions String[]      // Usage suggestions
  nutritionalInfo  Json?         // Nutritional information as key-value pairs
  specs            Json?         // Specifications as key-value pairs
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}

model SizeVariant {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  productId     String   @db.ObjectId
  size          String
  price         Float
  originalPrice Float?
  stock         Int      @default(0)
  product       Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Removed User model as per your requirements

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


